#!/bin/bash

# define constants with APP_ROOT
APP_ROOT=`readlink -f $(dirname $0)/..`
PARENT_ROOT=`readlink -f $APP_ROOT/..`

if test ! -f "$APP_ROOT/etc/app.ini"; then
    echo Cannot find etc/app.ini, make link first
    exit 1
fi

# read all vars in configuration file
eval $(sed -n -e 's/APP_ROOT/$APP_ROOT/g' -e '/=/p' $APP_ROOT/etc/app.ini)

# Link LIB for api and core
if test -e "$APP_ROOT/lib/core"; then
rm -f $APP_ROOT/lib/core
fi
ln -sf $core_root $APP_ROOT/lib/core

if test -e "$APP_ROOT/lib/api"; then
rm -f $APP_ROOT/lib/api
fi
ln -sf $api_root/lib/api $APP_ROOT/lib/api

# Link USR for api
if test -e "$APP_ROOT/usr/api"; then
rm -f $APP_ROOT/usr/api
fi
ln -sf $api_root/usr/api $APP_ROOT/usr/api

# create LOGS location
mkdir -p $logger_root
touch $logger_root/{debug,error}.log
chmod 666 $logger_root/{debug,error}.log
echo > $logger_root/error.log
echo > $logger_root/debug.log

# IMAGES AND CACHE
mkdir -p $PARENT_ROOT/images/{tmp,store,product} $PARENT_ROOT/cache
chmod 777 $PARENT_ROOT/images/{tmp,store,product} $PARENT_ROOT/cache

# image_root = var/images
if test -e "$image_root"; then
    rm -f $image_root
fi
ln -sf $PARENT_ROOT/images $image_root

# cache_root = pub/cache
if test -e "$cache_root"; then
    rm -f $cache_root
fi
ln -sf $PARENT_ROOT/cache $cache_root
